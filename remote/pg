#!/bin/bash

YL='\033[1;33m'
OR='\033[0;31m' 
NC='\033[0m'

#set -x
#set -v
set -e

sudo echo

cleanup() {
  echo -e "${NC}\n"
  killall ssh
}
trap cleanup 0

error() {
  local parent_lineno="$1"
  local message="$2"
  local code="${3:-1}"
  if [[ -n "$message" ]] ; then
    echo "Error on or near line ${parent_lineno}: ${message}; exiting with status ${code}"
  else
    echo "Error on or near line ${parent_lineno}; exiting with status ${code}"
  fi
  cleanup
  exit "${code}"
}
trap 'error ${LINENO}' ERR

dbhost=localhost
dbport=5432
port=22
case $1 in
  1|hub ) # hub-prod-db
      name=hub-prod-db
      host=hub.dreamkas.ru
      db=dreamhub
      dbhost=192.168.0.4
      port=10000
      ;;
  3|hubb ) # hub-beta
      name=hub-beta-db
      host=hub-beta.dreamkas.ru
      db=dreamhub
      dbhost=192.168.0.5
      port=10001
      ;;
  4|updateb ) # update-beta
      name=update-beta-db
      host=update-beta.dreamkas.ru
      db=update
      port=10002
      ;;
  2|update ) # update
      name=update-db
      host=update.dreamkas.ru
      db=update
      port=10003
      ;;
  5|updateo ) # update-old
      name=update-old-db
      host=95.213.229.219
      db=viki_server
      port=10004
      ;;
  *  )
      echo -e "\n${YL}Correct destinations:"
      echo -e "${OR}  1|hub     ${YL}for hub-prod-db"
      echo -e "${OR}  2|update  ${YL}for update"
      echo -e "${OR}  3|hubb    ${YL}for hub-beta"
      echo -e "${OR}  4|updateb ${YL}for update-beta"
      echo -e "${OR}  5|updateo ${YL}for update-old"

      echo -e "\n${YL}Correct commands:"
      echo -e "         psql (default)"
      echo -e "         pg_dump [filename]"
  
      echo -e "\n${OR}EXAMPLE: ${YL}pg_remote udpateb pg_dump dump.sql"
      exit 0
;;
esac


ssh -oStrictHostKeyChecking=no -f -N -L $port:$dbhost:$dbport root@$host & pid=$!
sleep 1.5
echo "Tunnel $port:$dbhost:$dbport to $name successfully builded."

echo -e "${OR}"
echo -e "Connecting to $name..." | tr '[:lower:]' '[:upper:]'
echo -e "${YL}"

if [ "$2" == "" ]
  then
    CMD="psql"
  else
    CMD=$2
fi

CMD="$CMD -U postgres -d $db -h ${name}.local -p $port"

action=${CMD:0:7}
if [ "$2" == "pg_dump" ]
  then
    [[ $3 ]] && file=$3 || file="/home/pavel/Work/dumps/${name}_`date -Iseconds`.sql"
    rm -rf $file
    eval $CMD | pv -cN $2  > $file
    echo "  Dump to file $file completed."
    echo "  Loaded `ls $file -lah | awk '{print $5}'`"
    printf $file | xclip
    echo "  File path copied to clipboard"
  else
    eval $CMD
fi
