#!/bin/bash

NC="\e[0m"
GR="\e[32m"

if [ -f $1 ]; then
  file=$1
  sudo echo
else
  echo "Wrong file $1"
  exit 1
fi

function Initialization() {
  set -e
  suffix=logparser
  workdir=`mktemp -d --suffix=$suffix`
}

function Clean_Up() {

  rm -rf /tmp/tmp.*$suffix

}

function mime() {

  echo `file $file -z --mime-type | sed 's/.* //'`

}

function Extract() {

  local mime=`mime`
  case $mime in
    application/x-tar ) # Extract .cslog
      tar -xf $file -C $workdir  
    ;;
    * )
      echo "Unsupported file type $mime"
    ;;
  esac
}

function PrintLine() {
  printf "| %-24s|%51s |\n"  "$1" "$2"
}


function output() {

  
  printf "\n%80s\n" | tr " " "="
  PrintLine Home "$workdir"
  PrintLine Version "$version"
  PrintLine UUID "$uuid"
  PrintLine Model "$model"
  printf "%80s\n\n" | tr " " "="

}

function Extract_Version() {
  
  [ ! $old ] && version=`cat $workdir/version` || version=`cat $workdir/config/register-modules.xml | sed -rn "s/.*productVersion=\"(.*)\"/\1/p"`

}

function Extract_UUID() {
  
  uuid=`cat $workdir/licenses/license.properties | grep uuid | sed 's/uuid = //'`

}

function Extract_Model() {

  model=`cat $workdir/device_info.properties | grep model | sed 's/model=//'`

}

function Check_Structure() {
  
  [ -f $workdir/version ] && old=false || old=true

}

function Evaluator() {
  printf "%-78s" $1 | tr " " "." | tr "_" " "
  eval $1
  echo -e "${GR}OK${NC}"
}

function main {

  Evaluator Clean_Up
  Evaluator Initialization
  Evaluator Extract
  Evaluator Check_Structure
  Evaluator Extract_Version
  Evaluator Extract_UUID
  Evaluator Extract_Model
  output

}

[ $1 == 'clean' ] && { Evaluator CleanUp; exit 0; }|| main
